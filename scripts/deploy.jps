type: update
version: 6.1.2
name: Minio Cluster
baseUrl: https://raw.githubusercontent.com/layershift/minio/master

targetNodes: minio

settings:
  - name: nodes
    caption: Cluster nodes
    tooltip: Determines maximum cluster storage capacity
    type: slider
    increment: 2
    min: 4
    max: 32
    useTips: true
    default: 16
    required: true
  - name: accessKey
    type: string
  - name: secretKey
    type: string
  - name: exportPath
    type: string

nodes:
  - nodeGroup: bl
    nodeType: nginx
    extip: true
    count: 1
    cloudlets: 16
    skipNodeEmails: true
    distribution:
      mode: STRICT
      zones:
        - type: storage
  - nodeGroup: cp
    nodeType: minio
    displayName: Minio Servers
    count: ${settings.nodes}
    cloudlets: 16
    password: ${settings.secretKey}
    skipNodeEmails: true
    distribution:
      mode: STRICT
      zones:
        - type: storage

onInstall:
  - cmd[cp]: |-
      jem passwd set -p ${settings.secretKey} -u ${settings.accessKey}
      jem service stop
      rm -rf /${settings.exportPath}/.minio.sys
      sed -i 's/$MINIO_OPTS $MINIO_VOLUMES/$MINIO_VOLUMES $MINIO_OPTS/' /etc/systemd/system/minio.service && systemctl daemon-reload
      echo "MINIO_OPTS='--address \":80\"'" >> /etc/default/minio
      chmod o+w /usr/local/bin && chmod o+w /usr/local/bin/minio && chown minio-user.minio-user /home/jelastic/
      echo $'Minio Client is installed as mcli and the local install aliased as myminio: mcli admin info myminio\n' >> /etc/motd
    user: root

  - build-cluster
  - restartContainers [cp]

  - install[bl]:
      jps: https://github.com/jelastic-jps/lets-encrypt/blob/master/manifest.jps?_r=${fn.random}
      skipEmail: true
      settings:
        customDomains: ${env.domain}

  - cmd[bl]: |-
      wget ${baseUrl}/conf/console.conf -O /etc/nginx/conf.d/console.conf
      sed -i 's/ignore_invalid_headers on;/ignore_invalid_headers off;\n\tproxy_buffering off;/' /etc/nginx/nginx-jelastic.conf
      sed -i '/listen/d' /etc/nginx/conf.d/ssl.conf
      sed -i '/add_header alt-svc/d' /etc/nginx/conf.d/ssl.conf
      sed -i 's/server_name/\tlisten\t443 http2 ssl reuseport;\n\tlisten\t[::]:443 http2 ssl reuseport;\n\tserver_name/' /etc/nginx/conf.d/ssl.conf
      /etc/init.d/nginx restart
    user: root

  - reset-firewall
  - configure-firewall
  - install-mc
  - reconfigure-minio
  - update-minio-server

actions:
  build-cluster:
    script: ${baseUrl}/build-cluster.js
    params:
      nodeGroup: cp
      volumePath: ${settings.exportPath}
  
  install-mc:
    cmd[cp]: |-
      curl https://dl.min.io/client/mc/release/linux-amd64/mc -o $HOME/mcli
      chmod +x $HOME/mcli
      echo 'export PATH="$PATH:$HOME"' >> $HOME/.bashrc
      $HOME/mcli alias set myminio http://cp ${settings.accessKey} ${settings.secretKey}
  
  reset-firewall:
    - script: |
        var resp = api.env.security.GetRules("${env.name}", session, null, "INPUT");
        var rules = resp.rules;
        for (var i = 0, n = rules.length; i < n; i++) {
          if(rules[i].id > 1 && rules[i].action == "ALLOW") {
            api.env.security.RemoveRule("${env.name}", session, rules[i].id);
          }
        }
        return { 'result': 0 };

  configure-firewall:
    - api[bl]:
      - method: environment.security.addrule
        params:
          rule: {
            "direction": "INPUT",
            "nodeGroup": "bl",
            "name": "Minio API",
            "protocol": "ALL",
            "ports": "80",
            "src": "ALL",
            "priority": 1010,
            "action": "ALLOW",
            "isEnabled": "true"
          }
    - api[bl]:
      - method: environment.security.addrule
        params:
          rule: {
            "direction": "INPUT",
            "nodeGroup": "bl",
            "name": "Minio API HTTPS",
            "protocol": "ALL",
            "ports": "443",
            "src": "ALL",
            "priority": 1020,
            "action": "ALLOW",
            "isEnabled": "true"
          }
    - api[bl]:
      - method: environment.security.addrule
        params:
          rule: {
            "direction": "INPUT",
            "nodeGroup": "bl",
            "name": "Minio Console",
            "protocol": "ALL",
            "ports": "9001",
            "src": "ALL",
            "priority": 1030,
            "action": "ALLOW",
            "isEnabled": "true"
          }

    - api[cp]:
      - method: environment.security.addrule
        params:
          rule: {
            "direction": "INPUT",
            "nodeGroup": "cp",
            "name": "Minio internal",
            "protocol": "ALL",
            "ports": "80",
            "src": "LOCAL",
            "priority": 1010,
            "action": "ALLOW",
            "isEnabled": "true"
          }
    - api[cp]:
      - method: environment.security.addrule
        params:
          rule: {
            "direction": "INPUT",
            "nodeGroup": "cp",
            "name": "Minio API",
            "protocol": "ALL",
            "ports": "80",
            "src": "",
            "priority": 1020,
            "action": "ALLOW",
            "isEnabled": "true",
            "relatedNodeGroup": "bl"
          }      
    - api[cp]:
      - method: environment.security.addrule
        params:
          rule: {
            "direction": "INPUT",
            "nodeGroup": "cp",
            "name": "Minio Console",
            "protocol": "ALL",
            "ports": "9001",
            "src": "",
            "priority": 1030,
            "action": "ALLOW",
            "isEnabled": "true",
            "relatedNodeGroup": "bl"
          }

  update-minio-server:
    - cmd[${nodes.cp.master.id}]: |-
        $HOME/mcli admin update myminio

    - restartContainers [cp]
  
  reconfigure-minio:
    - cmd[cp]: |-
        echo "MINIO_SERVER_URL=\"https://${env.domain}\"" >> /etc/default/minio
        echo "MINIO_BROWSER_REDIRECT_URL=\"https://${env.domain}:9001\"" >> /etc/default/minio
        sed -i 's/:80"/:80" --console-address ":9001"/' /etc/default/minio
      user: root

  update-minio-client:
    - cmd[cp]: |-
        $HOME/mcli update

buttons:
  - caption: Update MinIO Server
    confirmText: The cluster will be unavailable for a few minutes during update. Continue?
    action: update-minio-server
    successText: MinIO Server update successful
  - caption: Update MinIO Client
    confirmText: Update MinIO Client?
    action: update-minio-client
    successText: MinIO Client update successful

success:
  text: /text/success.md
  email: /text/success.md